@page "/membership/reset-password/{guidStr}"
@using AuthTemplateNET7.Client.Components
@using AuthTemplateNET7.Client.FormComponents
@using AuthTemplateNET7.Shared.Dtos.Membership
@inject HttpClient client_
@inject NavigationManager nav_


<PageTitleAndHeader Title="Reset password" />

@if(model != null)
{
    <EditFormWrapper Model="model" OnValidSubmit="validSubmit" SubmitButtonText="Reset password">

        <p>Enter your new password below.</p>

        <PasswordInput DisplayName="New password" @bind-Value="model.Password" Required="true" ValidationFor="() => model.Password" />

        <PasswordInput DisplayName="Confirm new password" @bind-Value="model.ConfirmPassword" Required="true" ValidationFor="() => model.ConfirmPassword" />

    </EditFormWrapper>
}
else
{
    <Spinner />
}

@code {
    //added

    [Parameter] public string GuidStr { get; set; }
    ResetPasswordDto model;
    [CascadingParameter]public NotificationService notificationService { get; set; }

    protected override void OnParametersSet()
    {
        Guid.TryParse(GuidStr, out var guid);

        model = new() { ResetToken = guid };
    }

    async Task validSubmit()
    {
        var response = await client_.PostAsJsonAsync<ResetPasswordDto>("api/membership/reset-password", model);

        if (response.IsSuccessStatusCode)
        {
            notificationService.Notify("You successfully changed your password", removeAfterSeconds: 10);
            nav_.NavigateTo("/", forceLoad: true); //to set the auth token
        }
        else
        {
            await notificationService.NotifyNonSuccessResponseAsync(response);
        }
    }
}
