@using AuthTemplateNET7.Client.FormComponents.Internals
@inherits BaseInput<string>

<div class="mb-3">
    <LableHelper InputId="@id" LabelText="@DisplayName" Required="Required" />

    <div class="input-group">

        <input type="@inputType"
               @attributes="AdditionalAttributes"
               @bind="CurrentValueAsString"
               @ref="passwordInput"
               class="form-control @CssClass"
               id="@id"
               placeholder="@Placeholder" />
        <button type="button" @onclick="toggleShowingPassword" class="btn @btnCss">
            <i class="@bootstrapIconCss"></i>
        </button>
    </div>

    @if(ValidationFor != null)
    {
        <ValidationMessage For="ValidationFor" />
    }
    @if (FormText != null)
    {
        <div class="form-text ms-2">
            @FormText
        </div>
    }

</div>

@code {
    //added

     /*
     * @attributes needs to be placed last to overide the supplied attributes
     */

    string bootstrapIconCss = "bi bi-eye";
    string btnCss = "btn-success";
    string inputType = "password";
    ElementReference passwordInput;
    bool showingPassword;

    async void toggleShowingPassword()
    {
        showingPassword = !showingPassword;
        if (showingPassword)
        {
            bootstrapIconCss = "bi bi-eye-slash";
            btnCss = "btn-danger";
            inputType = "text";
        }
        else
        {
            bootstrapIconCss = "bi bi-eye";
            btnCss = "btn-success";
            inputType = "password";
        }

        await passwordInput.FocusAsync();
    }

    protected override bool TryParseValueFromString(string value, out string result, out string validationErrorMessage)
    {
        result = value;
        validationErrorMessage = null;
        return true;
    }
}
