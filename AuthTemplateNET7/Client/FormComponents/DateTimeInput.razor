@using AuthTemplateNET7.Client.FormComponents.Internals
@typeparam TNullable
@inherits DateBase<TNullable>

<div class="mb-3">
    <LableHelper InputId="@id" LabelText="@DisplayName" Required="Required" />
    <input
        @attributes="AdditionalAttributes"
        @onchange="valueChanged"
        class="@getClassList() @CssClass"
        id="@id"
        placeholder="@Placeholder"
        type="datetime-local"
        value="@CurrentValueAsString" />

    @if (ValidationFor != null)
    {
        <ValidationMessage For="ValidationFor" />
    }

    @if (FormText != null)
    {
        <div class="form-text ms-2">
            @FormText
        </div>
    }
</div>

@code {
    //added

    /*
    * For DateTime and DateTimeOffset structs. Renders an input[type="datetime-local"].
    * @attributes needs to be placed last to overide the supplied attributes
     */

    protected override string FormatValueAsString(TNullable value)
    {
        if (CurrentValue == null) return "";
        string result;

        if(type == typeof(DateTime))
        {
            DateTime dateTime = (DateTime)(object)CurrentValue;
            result = dateTime.ToString("yyyy-MM-ddTHH:mm");
        }
        else if(type == typeof(DateTimeOffset))
        {
            DateTimeOffset dateTimeOffset = (DateTimeOffset)(object)CurrentValue;
            result = dateTimeOffset.ToString("yyyy-MM-ddTHH:mm");
        }
        else
        {
            throw new InvalidOperationException($"The type '{type}' is not a supported type.");
        }

        return result;
    }

    void valueChanged(ChangeEventArgs args)
    {
        var val = args.Value.ToString();

        if(DateTime.TryParse(val, out DateTime _dateTime))
        {
            CurrentValue = (TNullable)(object)_dateTime;
        }
        else if(DateTimeOffset.TryParse(val, out var _dateTimeOffset))
        {
            CurrentValue = (TNullable)(object)_dateTimeOffset;
        }
        else
        {
            CurrentValue = (TNullable)(object)"";
        }
    }
}
